name: Python package

on:
  push:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

defaults:
  run:
    shell: bash

jobs:
  main:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["windows-2022"]
        python-version: ["3.12"]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - run: python -m pip install --upgrade pip setuptools wheel uv

    - name: Setup Graphviz
      uses: ts-graphviz/setup-graphviz@v2

    - name: Copy dll (Windows-only)
      if: startsWith(matrix.os, 'windows')
      uses: ./ci/actions/windll

    - name: Install vaex
      run: uv pip install -v --system .[ci]

    - run: uv pip freeze

#    - name: Install vaex-enterprise
#      if: ${{ (github.event.pull_request.head.repo.full_name == 'vaexio/vaex') && (matrix.os == 'ubuntu-latest') }}
#      run: |
#        cd vaex-enterprise
#        micromamba install -c conda-forge distributed
#        pip install ray
#        pip install -e .

    # - name: Lint with flake8
    #   run: |
    #     echo "soon"
    #     # pip install flake8
    #     # stop the build if there are Python syntax errors or undefined names
    #     # flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     # flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        ./ci/04-run-test-suite.sh

    - name: Check ml spec
      run: |
        pip install dask[dataframe]
        python -m vaex.ml.spec packages/vaex-ml/vaex/ml/spec_new.json
        diff packages/vaex-ml/vaex/ml/spec_new.json packages/vaex-ml/vaex/ml/spec.json

#    - name: Test with pytest (vaex-enterprise)
#      if: ${{ (github.event.pull_request.head.repo.full_name == 'vaexio/vaex') && (matrix.os == 'ubuntu-latest') }}
#      run: |
#        py.test vaex-enterprise/tests --timeout=1000

    - name: Test command line
      run: |
        vaex convert ~/.vaex/data/helmi-dezeeuw-2000-FeH-v2-10percent.hdf5 test.parquet
        VAEX_PROGRESS_TYPE=rich vaex convert ~/.vaex/data/helmi-dezeeuw-2000-FeH-v2-10percent.hdf5 test.parquet
        vaex settings yaml
        vaex settings md
